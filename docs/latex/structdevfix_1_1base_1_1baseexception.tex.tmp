\hypertarget{structdevfix_1_1base_1_1baseexception}{}\section{devfix\+:\+:base\+:\+:baseexception Struct Reference}
\label{structdevfix_1_1base_1_1baseexception}\index{devfix\+::base\+::baseexception@{devfix\+::base\+::baseexception}}


Abstract exception base class.  




{\ttfamily \#include $<$baseexception.\+h$>$}



Inheritance diagram for devfix\+:\+:base\+:\+:baseexception\+:
% FIG 0


Collaboration diagram for devfix\+:\+:base\+:\+:baseexception\+:
% FIG 1
\subsection*{Public Member Functions}
\begin{DoxyCompactItemize}
\item 
\hyperlink{structdevfix_1_1base_1_1baseexception_a8e7e8164a43fef8e5b4ad3005f92f814}{baseexception} ()=delete
\item 
\hyperlink{structdevfix_1_1base_1_1baseexception_afa666f67fab6d7d5d9586b05b68625e9}{baseexception} (std\+::string what\+\_\+arg, int err=-\/1)
\item 
\hyperlink{structdevfix_1_1base_1_1baseexception_a88795048bdc3ddb0a8c82dd9cc398a96}{$\sim$baseexception} () override=default
\item 
const char $\ast$ \hyperlink{structdevfix_1_1base_1_1baseexception_a10cc739c08d7d38b89abea342824396f}{what} () const noexcept final
\item 
\mbox{\Hypertarget{structdevfix_1_1base_1_1baseexception_a89b9ebc06e0ca32dea259d1c4f0ac4fd}\label{structdevfix_1_1base_1_1baseexception_a89b9ebc06e0ca32dea259d1c4f0ac4fd}} 
int {\bfseries get\+\_\+errno} () const noexcept
\end{DoxyCompactItemize}
\subsection*{Protected Attributes}
\begin{DoxyCompactItemize}
\item 
\mbox{\Hypertarget{structdevfix_1_1base_1_1baseexception_ae91966707d8a72b2d07708971806a4d6}\label{structdevfix_1_1base_1_1baseexception_ae91966707d8a72b2d07708971806a4d6}} 
std\+::string \hyperlink{structdevfix_1_1base_1_1baseexception_ae91966707d8a72b2d07708971806a4d6}{what\+\_\+arg\+\_\+}
\begin{DoxyCompactList}\small\item\em failure description \end{DoxyCompactList}\item 
\mbox{\Hypertarget{structdevfix_1_1base_1_1baseexception_a7c39c01ed955a1377936a1a6110d4149}\label{structdevfix_1_1base_1_1baseexception_a7c39c01ed955a1377936a1a6110d4149}} 
int {\bfseries err\+\_\+}
\end{DoxyCompactItemize}


\subsection{Detailed Description}
Abstract exception base class. 

This class is the parent of more specific exceptions and cannot be thrown directly. 

\subsection{Constructor \& Destructor Documentation}
\mbox{\Hypertarget{structdevfix_1_1base_1_1baseexception_a8e7e8164a43fef8e5b4ad3005f92f814}\label{structdevfix_1_1base_1_1baseexception_a8e7e8164a43fef8e5b4ad3005f92f814}} 
\index{devfix\+::base\+::baseexception@{devfix\+::base\+::baseexception}!baseexception@{baseexception}}
\index{baseexception@{baseexception}!devfix\+::base\+::baseexception@{devfix\+::base\+::baseexception}}
\subsubsection{\texorpdfstring{baseexception()}{baseexception()}\hspace{0.1cm}{\footnotesize\ttfamily [1/2]}}
{\footnotesize\ttfamily devfix\+::base\+::baseexception\+::baseexception (\begin{DoxyParamCaption}{ }\end{DoxyParamCaption})\hspace{0.3cm}{\ttfamily [delete]}}

Delete simple constructor, always enforce a failure description. \mbox{\Hypertarget{structdevfix_1_1base_1_1baseexception_afa666f67fab6d7d5d9586b05b68625e9}\label{structdevfix_1_1base_1_1baseexception_afa666f67fab6d7d5d9586b05b68625e9}} 
\index{devfix\+::base\+::baseexception@{devfix\+::base\+::baseexception}!baseexception@{baseexception}}
\index{baseexception@{baseexception}!devfix\+::base\+::baseexception@{devfix\+::base\+::baseexception}}
\subsubsection{\texorpdfstring{baseexception()}{baseexception()}\hspace{0.1cm}{\footnotesize\ttfamily [2/2]}}
{\footnotesize\ttfamily devfix\+::base\+::baseexception\+::baseexception (\begin{DoxyParamCaption}\item[{std\+::string}]{what\+\_\+arg,  }\item[{int}]{err = {\ttfamily -\/1} }\end{DoxyParamCaption})\hspace{0.3cm}{\ttfamily [inline]}, {\ttfamily [explicit]}}

Constructs the exception object with what\+\_\+arg as explanatory std\+::string that can be accessed through \hyperlink{structdevfix_1_1base_1_1baseexception_a10cc739c08d7d38b89abea342824396f}{what()}. 
\begin{DoxyParams}{Parameters}
{\em what\+\_\+arg} & failure description \\
\hline
\end{DoxyParams}
\mbox{\Hypertarget{structdevfix_1_1base_1_1baseexception_a88795048bdc3ddb0a8c82dd9cc398a96}\label{structdevfix_1_1base_1_1baseexception_a88795048bdc3ddb0a8c82dd9cc398a96}} 
\index{devfix\+::base\+::baseexception@{devfix\+::base\+::baseexception}!````~baseexception@{$\sim$baseexception}}
\index{````~baseexception@{$\sim$baseexception}!devfix\+::base\+::baseexception@{devfix\+::base\+::baseexception}}
\subsubsection{\texorpdfstring{$\sim$baseexception()}{~baseexception()}}
{\footnotesize\ttfamily devfix\+::base\+::baseexception\+::$\sim$baseexception (\begin{DoxyParamCaption}{ }\end{DoxyParamCaption})\hspace{0.3cm}{\ttfamily [override]}, {\ttfamily [default]}}

Virtual constructor to make class abstract. 

\subsection{Member Function Documentation}
\mbox{\Hypertarget{structdevfix_1_1base_1_1baseexception_a10cc739c08d7d38b89abea342824396f}\label{structdevfix_1_1base_1_1baseexception_a10cc739c08d7d38b89abea342824396f}} 
\index{devfix\+::base\+::baseexception@{devfix\+::base\+::baseexception}!what@{what}}
\index{what@{what}!devfix\+::base\+::baseexception@{devfix\+::base\+::baseexception}}
\subsubsection{\texorpdfstring{what()}{what()}}
{\footnotesize\ttfamily const char$\ast$ devfix\+::base\+::baseexception\+::what (\begin{DoxyParamCaption}{ }\end{DoxyParamCaption}) const\hspace{0.3cm}{\ttfamily [inline]}, {\ttfamily [final]}, {\ttfamily [noexcept]}}

Returns a C-\/style character string describing the general cause of the current error. \begin{DoxyReturn}{Returns}
explanatory string 
\end{DoxyReturn}


The documentation for this struct was generated from the following file\+:\begin{DoxyCompactItemize}
\item 
devfix/base/exception/baseexception.\+h\end{DoxyCompactItemize}
